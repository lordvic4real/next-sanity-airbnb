{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\airbnb-sanity-frontend-main\\\\components\\\\DashboardMap.js\";\nimport React from \"react\";\nimport { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\n\nconst DashboardMap = ({\n  properties\n}) => {\n  var _properties$0$locatio, _properties$0$locatio2, _properties$0$locatio3, _properties$0$locatio4;\n\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: process.env.googlePlacesAPI // googleMapsApiKey: process.env.googlePlacesAPI,\n\n  });\n  console.log((_properties$0$locatio = properties[0].location) === null || _properties$0$locatio === void 0 ? void 0 : _properties$0$locatio.lat);\n  console.log((_properties$0$locatio2 = properties[0].location) === null || _properties$0$locatio2 === void 0 ? void 0 : _properties$0$locatio2.lat);\n  const containerStyle = {\n    width: \"100%\",\n    height: \"100vh\"\n  };\n  const center = {\n    lat: (_properties$0$locatio3 = properties[0].location) === null || _properties$0$locatio3 === void 0 ? void 0 : _properties$0$locatio3.lat,\n    lng: (_properties$0$locatio4 = properties[0].location) === null || _properties$0$locatio4 === void 0 ? void 0 : _properties$0$locatio4.lng\n  };\n  const [map, setMap] = React.useState(null);\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  const image = \"https://goo.gl/maps/NunYsazmNC9FBzY8A\";\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    children: [properties && properties.map((property, index) => {\n      var _property$location, _property$location2;\n\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: property === null || property === void 0 ? void 0 : (_property$location = property.location) === null || _property$location === void 0 ? void 0 : _property$location.lat,\n          lng: property === null || property === void 0 ? void 0 : (_property$location2 = property.location) === null || _property$location2 === void 0 ? void 0 : _property$location2.lng\n        },\n        icon: {\n          url: image,\n          anchor: new google.maps.Point(5, 58)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\nexport default /*#__PURE__*/React.memo(DashboardMap);","map":{"version":3,"sources":["C:/airbnb-sanity-frontend-main/components/DashboardMap.js"],"names":["React","GoogleMap","useJsApiLoader","Marker","DashboardMap","properties","isLoaded","id","googleMapsApiKey","process","env","googlePlacesAPI","console","log","location","lat","containerStyle","width","height","center","lng","map","setMap","useState","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","image","property","index","url","anchor","Point","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,MAApC,QAAkD,wBAAlD;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAAA;;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAAeJ,cAAc,CAAC;AAClCK,IAAAA,EAAE,EAAE,mBAD8B;AAElCC,IAAAA,gBAAgB,EAAEC,OAAO,CAACC,GAAR,CAAYC,eAFI,CAGlC;;AAHkC,GAAD,CAAnC;AAMAC,EAAAA,OAAO,CAACC,GAAR,0BAAYR,UAAU,CAAC,CAAD,CAAV,CAAcS,QAA1B,0DAAY,sBAAwBC,GAApC;AACAH,EAAAA,OAAO,CAACC,GAAR,2BAAYR,UAAU,CAAC,CAAD,CAAV,CAAcS,QAA1B,2DAAY,uBAAwBC,GAApC;AACA,QAAMC,cAAc,GAAG;AACrBC,IAAAA,KAAK,EAAE,MADc;AAErBC,IAAAA,MAAM,EAAE;AAFa,GAAvB;AAKA,QAAMC,MAAM,GAAG;AACbJ,IAAAA,GAAG,4BAAEV,UAAU,CAAC,CAAD,CAAV,CAAcS,QAAhB,2DAAE,uBAAwBC,GADhB;AAEbK,IAAAA,GAAG,4BAAEf,UAAU,CAAC,CAAD,CAAV,CAAcS,QAAhB,2DAAE,uBAAwBM;AAFhB,GAAf;AAKA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBtB,KAAK,CAACuB,QAAN,CAAe,IAAf,CAAtB;AAEA,QAAMC,MAAM,GAAGxB,KAAK,CAACyB,WAAN,CAAkB,SAASC,QAAT,CAAkBL,GAAlB,EAAuB;AACtD,UAAMM,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,YAAvB,EAAf;AACAV,IAAAA,GAAG,CAACW,SAAJ,CAAcL,MAAd;AACAL,IAAAA,MAAM,CAACD,GAAD,CAAN;AACD,GAJc,EAIZ,EAJY,CAAf;AAMA,QAAMY,SAAS,GAAGjC,KAAK,CAACyB,WAAN,CAAkB,SAASC,QAAT,CAAkBL,GAAlB,EAAuB;AACzDC,IAAAA,MAAM,CAAC,IAAD,CAAN;AACD,GAFiB,EAEf,EAFe,CAAlB;AAIA,QAAMY,KAAK,GAAG,uCAAd;AAEA,SAAO5B,QAAQ,gBACb,QAAC,SAAD;AACE,IAAA,iBAAiB,EAAEU,cADrB;AAEE,IAAA,MAAM,EAAEG,MAFV;AAGE,IAAA,IAAI,EAAE,EAHR;AAIE,IAAA,MAAM,EAAEK,MAJV;AAKE,IAAA,SAAS,EAAES,SALb;AAAA,eAOG5B,UAAU,IACTA,UAAU,CAACgB,GAAX,CAAe,CAACc,QAAD,EAAWC,KAAX;AAAA;;AAAA,0BACb,QAAC,MAAD;AACE,QAAA,QAAQ,EAAE;AACRrB,UAAAA,GAAG,EAAEoB,QAAF,aAAEA,QAAF,6CAAEA,QAAQ,CAAErB,QAAZ,uDAAE,mBAAoBC,GADjB;AAERK,UAAAA,GAAG,EAAEe,QAAF,aAAEA,QAAF,8CAAEA,QAAQ,CAAErB,QAAZ,wDAAE,oBAAoBM;AAFjB,SADZ;AAKE,QAAA,IAAI,EAAE;AACJiB,UAAAA,GAAG,EAAEH,KADD;AAEJI,UAAAA,MAAM,EAAE,IAAIT,MAAM,CAACC,IAAP,CAAYS,KAAhB,CAAsB,CAAtB,EAAyB,EAAzB;AAFJ;AALR;AAAA;AAAA;AAAA;AAAA,cADa;AAAA,KAAf,CARJ,eAoBE,qCApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADa,gBAwBb,qCAxBF;AA0BD,CA3DD;;AA6DA,4BAAevC,KAAK,CAACwC,IAAN,CAAWpC,YAAX,CAAf","sourcesContent":["import React from \"react\";\nimport { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\n\nconst DashboardMap = ({ properties }) => {\n  const { isLoaded } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: process.env.googlePlacesAPI,\n    // googleMapsApiKey: process.env.googlePlacesAPI,\n  });\n\n  console.log(properties[0].location?.lat);\n  console.log(properties[0].location?.lat);\n  const containerStyle = {\n    width: \"100%\",\n    height: \"100vh\",\n  };\n\n  const center = {\n    lat: properties[0].location?.lat,\n    lng: properties[0].location?.lng,\n  };\n\n  const [map, setMap] = React.useState(null);\n\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n\n  const image = \"https://goo.gl/maps/NunYsazmNC9FBzY8A\";\n\n  return isLoaded ? (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={center}\n      zoom={10}\n      onLoad={onLoad}\n      onUnmount={onUnmount}\n    >\n      {properties &&\n        properties.map((property, index) => (\n          <Marker\n            position={{\n              lat: property?.location?.lat,\n              lng: property?.location?.lng,\n            }}\n            icon={{\n              url: image,\n              anchor: new google.maps.Point(5, 58),\n            }}\n          />\n        ))}\n      <></>\n    </GoogleMap>\n  ) : (\n    <></>\n  );\n};\n\nexport default React.memo(DashboardMap);\n"]},"metadata":{},"sourceType":"module"}
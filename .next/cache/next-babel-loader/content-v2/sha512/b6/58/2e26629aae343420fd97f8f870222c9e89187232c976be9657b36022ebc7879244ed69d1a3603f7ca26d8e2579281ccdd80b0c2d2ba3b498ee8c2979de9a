{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/airbnb-sanity-frontend-main/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\airbnb-sanity-frontend-main\\\\components\\\\Map.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\n\nvar Map = function Map(_ref) {\n  _s();\n\n  var location = _ref.location;\n\n  var _useJsApiLoader = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: process.env.googlePlacesAPI\n  }),\n      isLoaded = _useJsApiLoader.isLoaded;\n\n  console.log(\"location.lat\", location.lat);\n  console.log(\"location.lat\", location.lat);\n  var containerStyle = {\n    width: \"100%\",\n    height: \"400px\"\n  };\n  console.log(location.lat);\n  var center = {\n    lat: location.lat,\n    lng: location.lng\n  };\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      map = _React$useState2[0],\n      setMap = _React$useState2[1];\n\n  var onLoad = React.useCallback(function callback(map) {\n    var bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  var onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  var image = \"https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png\";\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    children: [/*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: location.lat,\n        lng: location.lng\n      },\n      icon: {\n        url: image,\n        anchor: new google.maps.Point(5, 58)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, _this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(Map, \"sc/DS85Udqb0HC94DVNruSImuio=\", false, function () {\n  return [useJsApiLoader];\n});\n\n_c = Map;\nexport default _c2 = /*#__PURE__*/React.memo(Map);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/airbnb-sanity-frontend-main/components/Map.js"],"names":["React","GoogleMap","useJsApiLoader","Marker","Map","location","id","googleMapsApiKey","process","env","googlePlacesAPI","isLoaded","console","log","lat","containerStyle","width","height","center","lng","useState","map","setMap","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","image","url","anchor","Point","memo"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,MAApC,QAAkD,wBAAlD;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,wBACPH,cAAc,CAAC;AAClCI,IAAAA,EAAE,EAAE,mBAD8B;AAElCC,IAAAA,gBAAgB,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAFI,GAAD,CADP;AAAA,MACpBC,QADoB,mBACpBA,QADoB;;AAM5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BR,QAAQ,CAACS,GAArC;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BR,QAAQ,CAACS,GAArC;AACA,MAAMC,cAAc,GAAG;AACrBC,IAAAA,KAAK,EAAE,MADc;AAErBC,IAAAA,MAAM,EAAE;AAFa,GAAvB;AAKAL,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACS,GAArB;AACA,MAAMI,MAAM,GAAG;AACbJ,IAAAA,GAAG,EAAET,QAAQ,CAACS,GADD;AAEbK,IAAAA,GAAG,EAAEd,QAAQ,CAACc;AAFD,GAAf;;AAd4B,wBAmBNnB,KAAK,CAACoB,QAAN,CAAe,IAAf,CAnBM;AAAA;AAAA,MAmBrBC,GAnBqB;AAAA,MAmBhBC,MAnBgB;;AAqB5B,MAAMC,MAAM,GAAGvB,KAAK,CAACwB,WAAN,CAAkB,SAASC,QAAT,CAAkBJ,GAAlB,EAAuB;AACtD,QAAMK,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,YAAvB,EAAf;AACAT,IAAAA,GAAG,CAACU,SAAJ,CAAcL,MAAd;AACAJ,IAAAA,MAAM,CAACD,GAAD,CAAN;AACD,GAJc,EAIZ,EAJY,CAAf;AAMA,MAAMW,SAAS,GAAGhC,KAAK,CAACwB,WAAN,CAAkB,SAASC,QAAT,CAAkBJ,GAAlB,EAAuB;AACzDC,IAAAA,MAAM,CAAC,IAAD,CAAN;AACD,GAFiB,EAEf,EAFe,CAAlB;AAIA,MAAMW,KAAK,GACT,gGADF;AAGA,SAAOtB,QAAQ,gBACb,QAAC,SAAD;AACE,IAAA,iBAAiB,EAAEI,cADrB;AAEE,IAAA,MAAM,EAAEG,MAFV;AAGE,IAAA,IAAI,EAAE,EAHR;AAIE,IAAA,MAAM,EAAEK,MAJV;AAKE,IAAA,SAAS,EAAES,SALb;AAAA,4BAOE,QAAC,MAAD;AACE,MAAA,QAAQ,EAAE;AAAElB,QAAAA,GAAG,EAAET,QAAQ,CAACS,GAAhB;AAAqBK,QAAAA,GAAG,EAAEd,QAAQ,CAACc;AAAnC,OADZ;AAEE,MAAA,IAAI,EAAE;AACJe,QAAAA,GAAG,EAAED,KADD;AAEJE,QAAAA,MAAM,EAAE,IAAIP,MAAM,CAACC,IAAP,CAAYO,KAAhB,CAAsB,CAAtB,EAAyB,EAAzB;AAFJ;AAFR;AAAA;AAAA;AAAA;AAAA,aAPF,eAcE,qCAdF;AAAA;AAAA;AAAA;AAAA;AAAA,WADa,gBAkBb,qCAlBF;AAoBD,CAtDD;;GAAMhC,G;UACiBF,c;;;KADjBE,G;AAwDN,kCAAeJ,KAAK,CAACqC,IAAN,CAAWjC,GAAX,CAAf","sourcesContent":["import React from \"react\"\nimport { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\"\n\nconst Map = ({ location }) => {\n  const { isLoaded } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: process.env.googlePlacesAPI,\n  })\n\n  console.log(\"location.lat\", location.lat)\n  console.log(\"location.lat\", location.lat)\n  const containerStyle = {\n    width: \"100%\",\n    height: \"400px\",\n  }\n\n  console.log(location.lat)\n  const center = {\n    lat: location.lat,\n    lng: location.lng,\n  }\n\n  const [map, setMap] = React.useState(null)\n\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds()\n    map.fitBounds(bounds)\n    setMap(map)\n  }, [])\n\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null)\n  }, [])\n\n  const image =\n    \"https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png\"\n\n  return isLoaded ? (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={center}\n      zoom={10}\n      onLoad={onLoad}\n      onUnmount={onUnmount}\n    >\n      <Marker\n        position={{ lat: location.lat, lng: location.lng }}\n        icon={{\n          url: image,\n          anchor: new google.maps.Point(5, 58),\n        }}\n      />\n      <></>\n    </GoogleMap>\n  ) : (\n    <></>\n  )\n}\n\nexport default React.memo(Map)\n"]},"metadata":{},"sourceType":"module"}